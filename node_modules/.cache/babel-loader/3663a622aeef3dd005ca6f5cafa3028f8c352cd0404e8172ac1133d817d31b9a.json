{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderwojno/Desktop/Vince-Checked_Dice/src/pages/Game.jsx\",\n  _s = $RefreshSig$();\nimport { nanoid } from 'nanoid';\nimport React, { useState } from 'react';\nimport Die from '../Die';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NUM_DICE = 6;\nconst THRESHOLD_SCORE = 350;\nconst SPECIAL_VALUES = [{\n  value: 1,\n  points: 100\n}, {\n  value: 5,\n  points: 50\n}];\n\n// Die status can be 'HELD' or 'BANKED' or null.\nconst generateNewSet = () => Array(NUM_DICE).fill(null).map(() => ({\n  id: nanoid(),\n  value: generateRandomDieValue(),\n  status: null\n}));\nfunction Game() {\n  _s();\n  const [dice, setDice] = useState(generateNewSet());\n  const [bankedScore, setBankedScore] = useState(0);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [diceSet, setDiceSet] = useState(false);\n  const [busted, setBusted] = useState(false);\n  const [bustCount, setBustCount] = useState(0);\n\n  // Only render dice that are not banked\n  const diceToRender = dice.filter(die => die.status !== 'BANKED');\n  const diceHeld = dice.filter(die => die.status === 'HELD');\n  function holdDice(id) {\n    setDice(oldDice => oldDice.map(die => {\n      return die.id === id ? {\n        ...die,\n        status: die.status === 'HELD' ? null : 'HELD'\n      } : die;\n    }));\n  }\n  const bankPoints = () => {\n    const matchesThreePairs = hasThreePairs(dice);\n    if (matchesThreePairs) {\n      setCurrentScore(currentScore + 500);\n      newSet();\n      return;\n    }\n    const specialPoints = getPointsFromSpecialDice(dice);\n    console.log('Game ➡️ specialPoints:', specialPoints);\n    if (specialPoints === 0) {\n      setBusted(true);\n      setBustCount(bustCount + 1);\n      setCurrentScore(0);\n      return;\n    }\n    setCurrentScore(current => current + specialPoints);\n    setDice(prevDice => prevDice.map(die => die.status === 'HELD' ? {\n      ...die,\n      status: 'BANKED'\n    } : die));\n  };\n  const endTurn = () => {\n    setBankedScore(currentScore + bankedScore);\n    setCurrentScore(0);\n    newSet();\n  };\n  const rollDice = () => {\n    let newDice;\n\n    // Roll the dice that aren't currently held.\n    newDice = dice.map(die => die.status === null ? {\n      ...die,\n      value: generateRandomDieValue()\n    } : die);\n    const newDiceRollable = newDice.filter(die => die.status === null);\n    const rollPoints = calculatePointsFromDice(newDiceRollable);\n    if (rollPoints === 0) {\n      setBustCount(bustCount + 1);\n      setCurrentScore(0);\n      setBusted(true);\n      return;\n    }\n    setDice(newDice);\n  };\n  const resetGame = () => {\n    setBankedScore(0);\n    setCurrentScore(0);\n    setBustCount(0);\n    newSet();\n  };\n  const newSet = () => {\n    setDice(generateNewSet());\n    setDiceSet(true);\n    setBusted(false);\n  };\n  console.log('Game ➡️ diceHeld:', diceHeld);\n  const isRollButtonDisabled = !!busted;\n  const isNewDiceButtonDisabled = !busted;\n  const isEndTurnButtonDisabled = currentScore < THRESHOLD_SCORE;\n  const isBankButtonDisabled = diceHeld.length === 0 || !!busted;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"bankedText\",\n          children: [\"Score: \", bankedScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"bustedText\",\n          children: [\"Busts: \", bustCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: busted ? /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"gameh1\",\n          children: \"YOU BUSTED!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"gameh1\",\n          children: [\"BANKED: \", currentScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"endTurnBtn\",\n          onClick: endTurn,\n          disabled: isEndTurnButtonDisabled,\n          children: \"End Turn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"resetBtn\",\n          onClick: resetGame,\n          children: \"Reset Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice-container\",\n        children: !busted && diceToRender.map(die => /*#__PURE__*/_jsxDEV(Die, {\n          id: die.id,\n          value: die.value,\n          isHeld: die.status === 'HELD',\n          holdDice: () => holdDice(die.id)\n        }, die.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 14\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons1\",\n        children: [diceSet && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"rollBtn\",\n          onClick: rollDice,\n          disabled: isRollButtonDisabled,\n          children: \"Roll Dice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"newDiceBtn\",\n          onClick: newSet,\n          disabled: isNewDiceButtonDisabled,\n          children: \"New Dice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bankBtn\",\n          onClick: bankPoints,\n          disabled: isBankButtonDisabled,\n          children: \"Bank Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"diGD++OPTg9y2d7FeAo5+Wj2eCI=\");\n_c = Game;\nconst generateRandomDieValue = () => Math.ceil(Math.random() * 6);\nfunction isSixConsecutive(dice) {\n  if (dice.length !== NUM_DICE) {\n    return;\n  }\n\n  // Add up all numbers from 1 to NUM_DICE\n  const consecutive = Array(NUM_DICE).fill(null).map(i => i + 1);\n  const diceSorted = dice.sort((a, b) => a - b);\n  const isConsecutive = consecutive.every((item, index) => item === diceSorted[index].value);\n  return isConsecutive;\n}\nfunction hasThreePairs(dice) {\n  const encounteredDice = {};\n  dice.forEach(die => {\n    if (encounteredDice[die]) {\n      encounteredDice[die]++;\n    } else {\n      encounteredDice[die] = 1;\n    }\n  });\n  const hasThreePairs = Object.values(encounteredDice).filter(cardinality => cardinality === 2).length === 3;\n  return hasThreePairs;\n}\nfunction getPointsFromSpecialDice(dice) {\n  let points = 0;\n  dice.forEach(die => {\n    // If this die is special (1 or 5), assign to our special variable.\n    const special = SPECIAL_VALUES.find(special => special.value === die.value);\n    if (special) {\n      points += special.points;\n    }\n  });\n  return points;\n}\nfunction calculatePointsFromDice(dice) {\n  // Test all our special conditions first\n  if (hasThreePairs(dice)) {\n    return 500;\n  }\n  if (isSixConsecutive(dice)) {\n    return 1000;\n  }\n\n  // if (isThreeOfSimilar(dice)) {\n  //   return ...\n  // }\n\n  // if (anotherSpecialCondition(dice)) {\n  //   return ...\n  // }\n\n  return getPointsFromSpecialDice(dice);\n}\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["nanoid","React","useState","Die","jsxDEV","_jsxDEV","NUM_DICE","THRESHOLD_SCORE","SPECIAL_VALUES","value","points","generateNewSet","Array","fill","map","id","generateRandomDieValue","status","Game","_s","dice","setDice","bankedScore","setBankedScore","currentScore","setCurrentScore","diceSet","setDiceSet","busted","setBusted","bustCount","setBustCount","diceToRender","filter","die","diceHeld","holdDice","oldDice","bankPoints","matchesThreePairs","hasThreePairs","newSet","specialPoints","getPointsFromSpecialDice","console","log","current","prevDice","endTurn","rollDice","newDice","newDiceRollable","rollPoints","calculatePointsFromDice","resetGame","isRollButtonDisabled","isNewDiceButtonDisabled","isEndTurnButtonDisabled","isBankButtonDisabled","length","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","isHeld","_c","Math","ceil","random","isSixConsecutive","consecutive","i","diceSorted","sort","a","b","isConsecutive","every","item","index","encounteredDice","forEach","Object","values","cardinality","special","find","$RefreshReg$"],"sources":["/Users/alexanderwojno/Desktop/Vince-Checked_Dice/src/pages/Game.jsx"],"sourcesContent":["import { nanoid } from 'nanoid';\nimport React, { useState } from 'react';\nimport Die from '../Die';\n\nconst NUM_DICE = 6;\nconst THRESHOLD_SCORE = 350;\n\n\n\nconst SPECIAL_VALUES = [{\n  value: 1\n  , points: 100,\n}, { value: 5, points: 50 }];\n\n// Die status can be 'HELD' or 'BANKED' or null.\nconst generateNewSet = () => Array(NUM_DICE).fill(null).map(() => ({ id: nanoid(), value: generateRandomDieValue(), status: null }));\n\nfunction Game() {\n  const [dice, setDice] = useState(generateNewSet());\n\n  const [bankedScore, setBankedScore] = useState(0);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [diceSet, setDiceSet] = useState(false);\n  const [busted, setBusted] = useState(false);\n  const [bustCount, setBustCount] = useState(0);\n\n  // Only render dice that are not banked\n  const diceToRender = dice.filter(die => die.status !== 'BANKED');\n  const diceHeld = dice.filter(die => die.status === 'HELD');\n\n  function holdDice(id) {\n    setDice(oldDice =>\n      oldDice.map(die => {\n        return die.id === id ? { ...die, status: die.status === 'HELD' ? null : 'HELD' } : die;\n      }),\n    );\n  }\n\n  const bankPoints = () => {\n    const matchesThreePairs = hasThreePairs(dice);\n\n    if (matchesThreePairs) {\n      setCurrentScore(currentScore + 500);\n      newSet();\n      return;\n    }\n\n    const specialPoints = getPointsFromSpecialDice(dice);\n    console.log('Game ➡️ specialPoints:', specialPoints);\n\n    if (specialPoints === 0) {\n      setBusted(true);\n      setBustCount(bustCount + 1);\n      setCurrentScore(0);\n      return\n    }\n\n    setCurrentScore(current => current + specialPoints);\n    setDice(prevDice => prevDice.map(die => die.status === 'HELD' ? ({ ...die, status: 'BANKED' }) : die));\n\n  };\n\n\n  const endTurn = () => {\n    setBankedScore(currentScore + bankedScore);\n    setCurrentScore(0);\n    newSet();\n  };\n\n  const rollDice = () => {\n    let newDice;\n\n    // Roll the dice that aren't currently held.\n    newDice = dice.map((die) => die.status === null ? ({\n      ...die, value: generateRandomDieValue()\n    }) : die);\n\n    const newDiceRollable = newDice.filter(die => die.status === null);\n    const rollPoints = calculatePointsFromDice(newDiceRollable);\n\n    if (rollPoints === 0) {\n      setBustCount(bustCount + 1);\n      setCurrentScore(0);\n      setBusted(true);\n      return;\n    }\n\n    setDice(newDice);\n  };\n\n  const resetGame = () => {\n    setBankedScore(0);\n    setCurrentScore(0);\n    setBustCount(0);\n    newSet();\n  };\n\n  const newSet = () => {\n    setDice(generateNewSet());\n    setDiceSet(true);\n    setBusted(false);\n  };\n\n\n\n  console.log('Game ➡️ diceHeld:', diceHeld);\n\n  const isRollButtonDisabled = !!busted;\n  const isNewDiceButtonDisabled = !busted;\n  const isEndTurnButtonDisabled = currentScore < THRESHOLD_SCORE;\n  const isBankButtonDisabled = diceHeld.length === 0 || !!busted;\n\n  return (\n    <div>\n      <div className=\"topSection\">\n        <div>\n          <p className=\"bankedText\">Score: {bankedScore}</p>\n          <p className=\"bustedText\">Busts: {bustCount}</p>\n        </div>\n\n        <div>\n          {busted ? (\n            <h1 className=\"gameh1\">YOU BUSTED!</h1>\n          ) : (\n            <h1 className=\"gameh1\">BANKED: {currentScore}</h1>\n          )}\n        </div>\n\n        <div>\n          <button className=\"endTurnBtn\" onClick={endTurn} disabled={isEndTurnButtonDisabled}>\n            End Turn\n          </button>\n          <button className=\"resetBtn\" onClick={resetGame}>\n            Reset Game\n          </button>\n        </div>\n      </div>\n\n      <div>\n        <div className=\"dice-container\">\n          {!busted && diceToRender.map(\n            die =>\n            (<Die\n              key={die.id}\n              id={die.id}\n              value={die.value}\n              isHeld={die.status === 'HELD'}\n              holdDice={() => holdDice(die.id)}\n            />)\n          )}\n        </div>\n        <div className=\"buttons1\">\n          {diceSet && (\n            <button className=\"rollBtn\" onClick={rollDice} disabled={isRollButtonDisabled}>\n              Roll Dice\n            </button>\n          )}\n          <button className=\"newDiceBtn\" onClick={newSet} disabled={isNewDiceButtonDisabled}>\n            New Dice\n          </button>\n          <button className=\"bankBtn\" onClick={bankPoints} disabled={isBankButtonDisabled}>\n            Bank Points\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst generateRandomDieValue = () => Math.ceil(Math.random() * 6);\n\n\n\nfunction isSixConsecutive(dice) {\n  if (dice.length !== NUM_DICE) {\n    return\n  }\n\n  // Add up all numbers from 1 to NUM_DICE\n  const consecutive = Array(NUM_DICE).fill(null).map(i => i + 1);\n  const diceSorted = dice.sort((a, b) => a - b);\n\n  const isConsecutive = consecutive.every((item, index) => item === diceSorted[index].value);\n  return isConsecutive;\n}\n\nfunction hasThreePairs(dice) {\n  const encounteredDice = {};\n\n  dice.forEach(die => {\n    if (encounteredDice[die]) {\n      encounteredDice[die]++;\n    } else {\n      encounteredDice[die] = 1;\n    }\n  });\n\n  const hasThreePairs =\n    Object.values(encounteredDice).filter(cardinality => cardinality === 2).length === 3;\n  return hasThreePairs;\n}\n\nfunction getPointsFromSpecialDice(dice) {\n  let points = 0;\n\n  dice.forEach(die => {\n    // If this die is special (1 or 5), assign to our special variable.\n    const special = SPECIAL_VALUES.find(special => special.value === die.value);\n\n    if (special) {\n      points += special.points;\n    }\n  });\n\n  return points;\n}\n\nfunction calculatePointsFromDice(dice) {\n  // Test all our special conditions first\n  if (hasThreePairs(dice)) {\n    return 500;\n  }\n\n  if (isSixConsecutive(dice)) {\n    return 1000;\n  }\n\n  // if (isThreeOfSimilar(dice)) {\n  //   return ...\n  // }\n\n  // if (anotherSpecialCondition(dice)) {\n  //   return ...\n  // }\n\n  return getPointsFromSpecialDice(dice);\n\n}\n\n\nexport default Game;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}